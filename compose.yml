################### VOLUMES ####################
#volumes:
#  volumes:
#    dbcache:
#    db:
################### NETWORK ####################
networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
################### SERVICE ####################
services:
  # DATABASE (MySQL) ###########################
  db:
    image: mysql:8.1
    container_name: dbms
    restart: unless-stopped
    ports:
      - '3306:3306'
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./data/mysql:/var/lib/mysql:Z
      - ./logs/mysql:/var/log/mysql:Z
      - ./container/mysql/sql:/docker-entrypoint-initdb.d:Z
    networks:
      - backend
  # Redis ######################################
  redis:
    image: 'redis:alpine'
    container_name: dbcache
    restart: unless-stopped
    volumes:
      - ./data/redis:/data:Z
    ports:
      - '6379:6379'
    networks:
      - backend
  # PHPMyAdmin #################################
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: myadmin
    ports:
      - 8080:80
    depends_on:
      - db
    restart: unless-stopped
    environment:
      PMA_HOST: db
      #PMA_USER: ${DB_USERNAME}
      #PMA_PASSWORD: ${DB_PASSWORD}
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    networks:
      - backend
      - frontend
  # app ########################################
  app:
    build:
      args:
        user: developer
        uid: 1000
      context: ./container/php/
      dockerfile: Containerfile
    image: web
    container_name: web
    restart: unless-stopped
    expose:
      - 9000
    working_dir: /var/www/
    volumes:
      - ./src:/var/www:cached
    depends_on:
      - db
      - redis
    networks:
      - backend
  # Nginx ######################################
  nginx:
    image: nginx:alpine
    container_name: webserver
    ports:
      - 80:80
    volumes:
      - ./src:/var/www:z
      - ./container/nginx/default.conf:/etc/nginx/conf.d/default.conf:z
      - ./container/nginx/nginx.conf:/etc/nginx/nginx.conf:z
    depends_on:
      - app
    networks:
      - frontend
      - backend
